// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"e-marketing/internal/ioc"
	"e-marketing/internal/job"
	"e-marketing/internal/repository"
	"e-marketing/internal/repository/dao"
	"e-marketing/internal/service"
)

// Injectors from wire.go:

func InitApp() *App {
	engine := ioc.InitWebServer()
	db := ioc.InitDB()
	shopDAO := dao.NewShopDAO(db)
	shopRepo := repository.NewShopRepo(shopDAO)
	shopService := service.NewShopService(shopRepo)
	cursorDAO := dao.NewCursorDAO(db)
	cursorRepo := repository.NewCursorRepo(cursorDAO)
	senderDAO := dao.NewSenderDAO(db)
	senderRepo := repository.NewSenderRepo(senderDAO)
	scenarioDAO := dao.NewScenarioDAO(db)
	scenarioRepo := repository.NewScenarioRepo(scenarioDAO)
	recipientDAO := dao.NewRecipientDAO(db)
	recipientRepo := repository.NewRecipientRepo(recipientDAO)
	emailService := service.NewEmailService(cursorRepo, senderRepo, scenarioRepo, recipientRepo)
	client := ioc.InitSendgrid()
	emailSendService := service.NewEmailSendService(client)
	notInstalledJob := job.NewUninstalledJob(shopService, emailService, emailSendService)
	cron := ioc.InitJobs(notInstalledJob)
	app := &App{
		server: engine,
		cron:   cron,
	}
	return app
}
